@*@model IEnumerable<ScheduleAutomation.tblEmployee>*@
@model SortedDictionary<Guid, List<ScheduleAutomation.Models.EmployeeWithSessionViewModel>>

@*@{
    var currentDate = Model.First().Key;
    }*@
@*@using ScheduleAutomation.Models
    @model dynamic*@



@{
    Layout = "~/Views/Shared/_EmployeeLayout.cshtml";
    ViewBag.Title = "Calendar";
}

<script src="~/Scripts/jquery-3.5.1.min.js"></script>
<script src="~/Scripts/bootstrap.min.js"></script>
<link href="~/Content/bootstrap.min.css" rel="stylesheet" />






@*<div class="container" style="margin-top: 40px;">
        <table class="table">

            <thead>
                <tr>
                    <th>Instructors</th>
                    <th>something1</th>
                    <th>something2</th>
                    <th>something3</th>
                    <th>something4</th>
                    <th>something5</th>
                    <th>something6</th>
                    <th>something7</th>
                </tr>
            </thead>

            <tbody id="SetCalendar">

                <tr id="LoadingStatus" style="color:red;"></tr>


            </tbody>

        </table>
    </div>*@































<div class="create">
    <h1 class="display-4">Calendar section</h1>
</div>


@{ // responsible for getting the first and last days of the month
    var getDate = DateTime.Now;
    var todayNumb = Convert.ToInt16(getDate.ToString("dd"));

    var firstDayOfTheMonth = new DateTime(getDate.Year, getDate.Month, 1);
    var firstWeekNow = Convert.ToInt16(getDate.ToString("dd")) + 7;
    var lastDayOfTheMonth = firstDayOfTheMonth.AddMonths(1).AddDays(-1);
    var firstWeek = Convert.ToInt16(firstDayOfTheMonth.ToString("dd")) + 7;

    var numberOfDays = Convert.ToInt16(lastDayOfTheMonth.ToString("dd"));

    var currentMonth = DateTime.Now.ToString("MMMM");
}




<br />
<br />
<br />



<div class="myCalendar">
    <div class="currentMonthLabel">
        <button class="btn btn-block btn-danger">previous month</button>
        <h1 id="monthLabel">@currentMonth</h1>
        <button class="btn btn-block btn-primary">next month</button>
        </div>
        <div class="wrapper">
        <div class="rTable">
            <div class="rTableHeading">
                <div class="rTableRow">
                    <div class="rTableHead instructortblHead sticky-col first-col">
                        Days <span>&#8614;</span>
                    </div>
                    @for (var i = 1; i <= numberOfDays; i++)
                    {
                        var mydate = $"{i} / {DateTime.Now.Month.ToString()} / {DateTime.Now.ToString("yyyy")} {firstDayOfTheMonth.AddDays(i)}"; //+" 12:00:00 AM"

                    <div class="rTableHead calendarDatesRow">@mydate</div>
                    }
                </div>

                }


                <div class="rTableRow" id="instructorNamesCol">

                    <div class="rTableHead instructortblHead sticky-col first-col">
                        Instructors<br /><span>&#8615;</span>
                    </div>

                    @for (var i = 1; i <= numberOfDays; i++)
                    {
                    <div class="rTableHead calendarDatesRow">@i</div>
                    }

                </div>

                @*.Where(x => x.tblRole.Role.ToLower().Equals(role))*@
                @{
                        var role = "instructor";
                    for (var i = 0; i < numberOfDays; i++)

                        {

                            var currentDate = firstDayOfTheMonth.AddDays(i);

                    <div class="rTableRow" id="instructorNamesCol">
                        <div class="rTableHead instructorName sticky-col first-col">

                            foreach (var item in Model)
                            @*@Html.DisplayFor(modelItem => item.tblEmployee.FirstName)
                    @Html.DisplayFor(modelItem => item.tblEmployee.LastName)*@


                        </div>
                        @for (var i = 1; i <= numberOfDays; i++)
                            {

                        <div class="rTableCell">
                            @*@Html.DisplayFor(modelItem => item.tblSessionEmpLink.typeOfParticipation)*@
                        </div>
                            }

                    </div>
                    }
                }
            </div>
        </div>
        </div>
        </div>



        <br />
        <br />
        <br />


        <!----------------------------------------------------------------------------------------------------------->
        @*<div class="myCalendar">
                <div class="currentMonthLabel">
                    <button class="btn btn-block btn-danger">previous month</button>
                    <h1>@currentMonth</h1>
                    <button class="btn btn-block btn-primary">next month</button>
                </div>
                <div class="wrapper">
                    <div class="rTable">
                        <div class="rTableHeading">
                            <div class="rTableRow">
                                <div class="rTableHead instructortblHead sticky-col first-col">Days</div>
                                @for (var i = 1; i <= numberOfDays; i++)
                                {

                                    var mydate = i + "/" + DateTime.Now.Month.ToString() + "/" + DateTime.Now.ToString("yyyy") + " 00:00:00";
                                    <div class="rTableHead calendarDatesRow">@mydate.ToString()</div>
                                }
                            </div>



                            <div class="rTableRow" id="instructorNamesCol">

                                <div class="rTableHead instructortblHead sticky-col first-col">Instructors</div>

                                @for (var i = 1; i <= numberOfDays; i++)
                                {
                                    <div class="rTableHead calendarDatesRow">@i</div>
                                }

                            </div>


                            @{
                                var role = "instructor";
                                foreach (var item in Model.Where(x => x.tblRole.Role.ToLower().Equals(role)))
                                {

                                    <div class="rTableRow" id="instructorNamesCol">
                                        <div class="rTableHead instructorName sticky-col first-col">
                                            @Html.DisplayFor(modelItem => item.FirstName)
                                            @Html.DisplayFor(modelItem => item.LastName)
                                        </div>
                                        @for (var i = 1; i <= numberOfDays; i++)
                                        {




                                            <div class="rTableCell">Something</div>
                                        }

                                    </div>
                                }
                            }
                        </div>
                    </div>
                </div>
            </div>*@


        <!----------------------------------------------------------------------------------------------------------->